{"ast":null,"code":"var _jsxFileName = \"/home/juani/Desktop/login-mockup/src/screens/login-screen.js\";\nimport React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { TextField, Button, Box, Container, Typography, FormControlLabel, Checkbox } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required')\n});\nconst LoginScreen = () => {\n  const handleLogin = (values, {\n    setFieldError\n  }) => {\n    // Perform validation only when \"Ingresar\" button is clicked\n    validationSchema.validate(values, {\n      abortEarly: false\n    }).then(() => {\n      // Your login logic here\n      console.log(values);\n    }).catch(err => {\n      // Set form field errors based on validation results\n      err.inner.forEach(error => {\n        setFieldError(error.path, error.message);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: '#f5f5f5',\n      minHeight: '100vh',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        backgroundColor: 'white',\n        padding: '24px',\n        borderRadius: '8px',\n        boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Login MockUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username: '',\n          password: '',\n          rememberMe: false\n        },\n        onSubmit: handleLogin,\n        children: ({\n          errors,\n          touched,\n          setFieldError\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            name: \"username\",\n            as: TextField,\n            label: \"Usuario\",\n            variant: \"outlined\",\n            fullWidth: true,\n            sx: {\n              marginBottom: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), touched.username && errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"password\",\n            as: TextField,\n            label: \"Contrase\\xF1a\",\n            variant: \"outlined\",\n            type: \"password\",\n            fullWidth: true,\n            sx: {\n              marginBottom: '16px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), touched.password && errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error\",\n            children: errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            name: \"rememberMe\",\n            type: \"checkbox\",\n            children: ({\n              field\n            }) => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                ...field\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 30\n              }, this),\n              label: \"Recordar nombre de usuario\",\n              sx: {\n                marginBottom: '16px',\n                alignItems: 'center',\n                justifyContent: 'center',\n                display: 'flex'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            sx: {\n              marginBottom: '8px',\n              width: '100%'\n            },\n            children: \"Ingresar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            sx: {\n              width: '100%'\n            },\n            children: \"Quiero crear una cuenta\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","Formik","Form","Field","Yup","TextField","Button","Box","Container","Typography","FormControlLabel","Checkbox","jsxDEV","_jsxDEV","validationSchema","object","shape","username","string","required","password","min","LoginScreen","handleLogin","values","setFieldError","validate","abortEarly","then","console","log","catch","err","inner","forEach","error","path","message","sx","backgroundColor","minHeight","display","justifyContent","alignItems","children","maxWidth","padding","borderRadius","boxShadow","textAlign","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","rememberMe","onSubmit","errors","touched","name","as","label","fullWidth","marginBottom","className","type","field","control","width","_c","$RefreshReg$"],"sources":["/home/juani/Desktop/login-mockup/src/screens/login-screen.js"],"sourcesContent":["import React from 'react';\nimport { Formik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  TextField,\n  Button,\n  Box,\n  Container,\n  Typography,\n  FormControlLabel,\n  Checkbox,\n} from '@mui/material';\n\nconst validationSchema = Yup.object().shape({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().min(8, 'Password must be at least 8 characters').required('Password is required'),\n});\n\nconst LoginScreen = () => {\n  const handleLogin = (values, { setFieldError }) => {\n    // Perform validation only when \"Ingresar\" button is clicked\n    validationSchema.validate(values, { abortEarly: false })\n      .then(() => {\n        // Your login logic here\n        console.log(values);\n      })\n      .catch((err) => {\n        // Set form field errors based on validation results\n        err.inner.forEach((error) => {\n          setFieldError(error.path, error.message);\n        });\n      });\n  };\n\n  return (\n    <Box\n      sx={{\n        backgroundColor: '#f5f5f5',\n        minHeight: '100vh',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <Container\n        maxWidth=\"sm\"\n        sx={{\n          backgroundColor: 'white',\n          padding: '24px',\n          borderRadius: '8px',\n          boxShadow: '0px 0px 10px rgba(0, 0, 0, 0.1)',\n          textAlign: 'center',\n        }}\n      >\n        <Typography variant=\"h4\" gutterBottom>\n          Login MockUp\n        </Typography>\n        <Formik\n          initialValues={{ username: '', password: '', rememberMe: false }}\n          onSubmit={handleLogin}\n        >\n          {({ errors, touched, setFieldError }) => (\n            <Form>\n              <Field\n                name=\"username\"\n                as={TextField}\n                label=\"Usuario\"\n                variant=\"outlined\"\n                fullWidth\n                sx={{ marginBottom: '16px' }}\n              />\n              {touched.username && errors.username && (\n                <div className=\"error\">{errors.username}</div>\n              )}\n\n              <Field\n                name=\"password\"\n                as={TextField}\n                label=\"ContraseÃ±a\"\n                variant=\"outlined\"\n                type=\"password\"\n                fullWidth\n                sx={{ marginBottom: '16px' }}\n              />\n              {touched.password && errors.password && (\n                <div className=\"error\">{errors.password}</div>\n              )}\n\n              <Field\n                name=\"rememberMe\"\n                type=\"checkbox\"\n              >\n                {({ field }) => (\n                  <FormControlLabel\n                    control={<Checkbox {...field} />}\n                    label=\"Recordar nombre de usuario\"\n                    sx={{ marginBottom: '16px', alignItems: 'center', justifyContent: 'center', display: 'flex' }}\n                  />\n                )}\n              </Field>\n\n              <Button type=\"submit\" variant=\"contained\" sx={{ marginBottom: '8px', width: '100%' }}>\n                Ingresar\n              </Button>\n              <Button variant=\"outlined\" sx={{ width: '100%' }}>\n                Quiero crear una cuenta\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n};\n\nexport default LoginScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}